/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cumul.hello.world;

import java.io.IOException;
import java.util.Map;
import fi.iki.elonen.NanoHTTPD;
import io.github.cdimascio.dotenv.Dotenv;
import io.cumul.sdk.Cumulio;
import org.json.JSONObject;
import com.google.common.collect.ImmutableMap;

public class App extends NanoHTTPD {

    static private Dotenv dotenv;
    
    public App() throws IOException {
        super(8081);
        start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);
        System.out.println("\nRunning! Point your browsers to http://localhost:8080/ \n");
    }

    public static void main(String[] args) {
        try {
            dotenv = Dotenv
                .configure()
                .directory("../")
                .systemProperties()
                .load();
            System.out.println(dotenv.get("CUMUL_KEY"));
            new App();
        } catch (IOException ioe) {
            System.err.println("Couldn't start server:\n" + ioe);
        }
    }

    @Override
    public Response serve(IHTTPSession session) {
        try {
            // Setup connection
            Cumulio client = new Cumulio(dotenv.get("CUMUL_KEY"), dotenv.get("CUMUL_TOKEN"), "https://api.cumul.io/");

            // On page requests of pages containing embedded dashboards, request an "authorization"
            JSONObject authorization = client.create("authorization", ImmutableMap.builder()
                .put("type", "sso")
                .put("expiry", "24 hours")
                .put("inactivity_interval", "10 minutes")
                .put("username", "< A unique and immutable identifier for your end user >")
                .put("name", dotenv.get("USER_NAME"))
                .put("email", dotenv.get("USER_EMAIL"))
                .put("suborganization", "< Suborganization name >")
                .put("integration_id", dotenv.get("INTEGRATION_ID"))
                .put("role", "viewer")
                .build()
            );
            Response response = newFixedLengthResponse(
                "{ " +
                "\"id\": " +
                authorization.getString("id") +
                ", " +
                "\"token: \"" +
                authorization.getString("token") + 
                "}"
            );
            response.addHeader("Content-Type", "application/json");
            return response;
        } catch(Exception e) {
            
        }
        Response resp = newFixedLengthResponse("{ \"temp\": \"Wow\" }");
        resp.addHeader("Content-Type", "application/json");
        return resp;
    }
}
